# Database for the records specific to the marCCD driver
# Mark Rivers
# October 31, 2008

# Individual status fields for the Acquire, Readout, Correct, Writing, and Dezinger tasks
record(mbbi,"$(P)$(R)MarAcquireStatus_RBV") {
    field(DTYP,"asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))MAR_ACQUIRE_STATUS")
    field(SCAN, "I/O Intr")
    field(PINI, "1")
    field(DESC,"Acquire status")
    field(ZRVL,"0")
    field(ZRST,"Idle")
    field(ZRSV,"NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Queued")
    field(ONSV, "MINOR")
    field(TWVL,"2")
    field(TWST,"Executing")
    field(TWSV, "MINOR")
    field(THVL,"3")
    field(THST,"Undefined 3")
    field(THSV, "INVALID")
    field(FRVL,"4")
    field(FRST,"Error")
    field(FRSV, "MAJOR")
    field(FVVL,"5")
    field(FVST,"Undefined 5")
    field(FVSV, "INVALID")
    field(SXVL,"6")
    field(SXST,"Undefined 6")
    field(SXSV, "INVALID")
    field(SVVL,"7")
    field(SVST,"Undefined 7")
    field(SVSV, "INVALID")
    field(EIVL,"5")
    field(EIST,"Reserved")
    field(EISV, "MINOR")
}

record(mbbi,"$(P)$(R)MarReadoutStatus_RBV") {
    field(DTYP,"asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))MAR_READOUT_STATUS")
    field(SCAN, "I/O Intr")
    field(PINI, "1")
    field(DESC,"Readout status")
    field(ZRVL,"0")
    field(ZRST,"Idle")
    field(ZRSV,"NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Queued")
    field(ONSV, "MINOR")
    field(TWVL,"2")
    field(TWST,"Executing")
    field(TWSV, "MINOR")
    field(THVL,"3")
    field(THST,"Undefined 3")
    field(THSV, "INVALID")
    field(FRVL,"4")
    field(FRST,"Error")
    field(FRSV, "MAJOR")
    field(FVVL,"5")
    field(FVST,"Undefined 5")
    field(FVSV, "INVALID")
    field(SXVL,"6")
    field(SXST,"Undefined 6")
    field(SXSV, "INVALID")
    field(SVVL,"7")
    field(SVST,"Undefined 7")
    field(SVSV, "INVALID")
    field(EIVL,"5")
    field(EIST,"Reserved")
    field(EISV, "MINOR")
}

record(mbbi,"$(P)$(R)MarCorrectStatus_RBV") {
    field(DTYP,"asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))MAR_CORRECT_STATUS")
    field(SCAN, "I/O Intr")
    field(PINI, "1")
    field(DESC,"Correct status")
    field(ZRVL,"0")
    field(ZRST,"Idle")
    field(ZRSV,"NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Queued")
    field(ONSV, "MINOR")
    field(TWVL,"2")
    field(TWST,"Executing")
    field(TWSV, "MINOR")
    field(THVL,"3")
    field(THST,"Undefined 3")
    field(THSV, "INVALID")
    field(FRVL,"4")
    field(FRST,"Error")
    field(FRSV, "MAJOR")
    field(FVVL,"5")
    field(FVST,"Undefined 5")
    field(FVSV, "INVALID")
    field(SXVL,"6")
    field(SXST,"Undefined 6")
    field(SXSV, "INVALID")
    field(SVVL,"7")
    field(SVST,"Undefined 7")
    field(SVSV, "INVALID")
    field(EIVL,"5")
    field(EIST,"Reserved")
    field(EISV, "MINOR")
}

record(mbbi,"$(P)$(R)MarWritingStatus_RBV") {
    field(DTYP,"asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))MAR_WRITING_STATUS")
    field(SCAN, "I/O Intr")
    field(PINI, "1")
    field(DESC,"Writing status")
    field(ZRVL,"0")
    field(ZRST,"Idle")
    field(ZRSV,"NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Queued")
    field(ONSV, "MINOR")
    field(TWVL,"2")
    field(TWST,"Executing")
    field(TWSV, "MINOR")
    field(THVL,"3")
    field(THST,"Undefined 3")
    field(THSV, "INVALID")
    field(FRVL,"4")
    field(FRST,"Error")
    field(FRSV, "MAJOR")
    field(FVVL,"5")
    field(FVST,"Undefined 5")
    field(FVSV, "INVALID")
    field(SXVL,"6")
    field(SXST,"Undefined 6")
    field(SXSV, "INVALID")
    field(SVVL,"7")
    field(SVST,"Undefined 7")
    field(SVSV, "INVALID")
    field(EIVL,"5")
    field(EIST,"Reserved")
    field(EISV, "MINOR")
}

record(mbbi,"$(P)$(R)MarDezingerStatus_RBV") {
    field(DTYP,"asynInt32")
    field(INP, "@asyn($(PORT),$(ADDR),$(TIMEOUT))MAR_DEZINGER_STATUS")
    field(SCAN, "I/O Intr")
    field(PINI, "1")
    field(DESC,"Dezinger status")
    field(ZRVL,"0")
    field(ZRST,"Idle")
    field(ZRSV,"NO_ALARM")
    field(ONVL,"1")
    field(ONST,"Queued")
    field(ONSV, "MINOR")
    field(TWVL,"2")
    field(TWST,"Executing")
    field(TWSV, "MINOR")
    field(THVL,"3")
    field(THST,"Undefined 3")
    field(THSV, "INVALID")
    field(FRVL,"4")
    field(FRST,"Error")
    field(FRSV, "MAJOR")
    field(FVVL,"5")
    field(FVST,"Undefined 5")
    field(FVSV, "INVALID")
    field(SXVL,"6")
    field(SXST,"Undefined 6")
    field(SXSV, "INVALID")
    field(SVVL,"7")
    field(SVST,"Undefined 7")
    field(SVSV, "INVALID")
    field(EIVL,"5")
    field(EIST,"Reserved")
    field(EISV, "MINOR")
}

# Timeout waiting for TIFF file.
record(ao, "$(P)$(R)ReadTiffTimeout")
{
    field(DTYP, "asynFloat64")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))TIFF_TIMEOUT")
    field(DESC, "Timeout for TIFF file")
    field(VAL,  "30")
    field(EGU,  "s")
    field(PREC, "3")
}

# Overlap operation
record(bo, "$(P)$(R)OverlapMode")
{
    field(DTYP, "asynInt32")
    field(OUT,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Overlap")
    field(PINI, "1")
    field(DESC, "Overlap or sequential")
    field(ZNAM, "Sequential")
    field(ONAM, "Overlap")
}

record(bi, "$(P)$(R)OverlapMode_RBV")
{
    field(DTYP, "asynInt32")
    field(INP,  "@asyn($(PORT),$(ADDR),$(TIMEOUT))Overlap")
    field(SCAN, "I/O Intr")
    field(PINI, "1")
    field(DESC, "Overlap or sequential")
    field(ZNAM, "Sequential")
    field(ONAM, "Overlap")
}


# asyn record for interactive communication with marServer
record(asyn, "$(P)$(R)marServerAsyn")
{
    field(PORT,  "$(MARSERVER_PORT)")
    field(IMAX, "64")
    field(OMAX, "64")
}
